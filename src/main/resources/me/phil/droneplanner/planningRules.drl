package me.phil.activityplanner;
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;
import me.phil.activityplanner.domain.Activity;
import me.phil.activityplanner.domain.Assignment;
import me.phil.activityplanner.domain.Day;

global HardSoftScoreHolder scoreHolder;

// Assignments have been made
rule "unassignedAssignments"
	when
		$assignment : Assignment(day == null)
	then
		scoreHolder.addHardConstraintMatch(kcontext, -1);
end

// Avoid making more assignments to a day than it has available slots
rule "assignedDaySlots"
	when
		$day : Day($availableSlots : availableAssignmentSlots)
		$requiredSlots : Number(intValue > $availableSlots) from accumulate(
			$assignment : Assignment(day == $day),
			count($assignment)
		)
	then
		scoreHolder.addHardConstraintMatch(kcontext, $availableSlots - $requiredSlots.intValue());
end

// Try to avoid having a small number of sessions of an activity on a given day
rule "minimumActivityLength"
	when
		$day : Day()
		$activity : Activity()
		$numberOfActivityOnDay : Number(intValue == 1) from accumulate(
			$assignment : Assignment(day == $day, assignedActivity == $activity),
			count($assignment)
		)
	then
		scoreHolder.addSoftConstraintMatch(kcontext, -1);
end
